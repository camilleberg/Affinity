y = ~boston_agegroups$values,
type = "scatter",
mode = "markers",
marker = list(symbol = "line-ew", size = 25,
line = list(width = 2)),
color = I("Red"),
text = ~boston_agegroups$values, textposition = 'auto',
name = "All Boston"
) %>%
add_annotations(y = ~boston_agegroups$values,
text = ~substr(paste0(boston_agegroups$values*100, "%"), 1, 4),
xref = "x",
yref = "y",
showarrow = FALSE,
# arrowhead = 4,
# arrowsize = .5,
ax = 20,
ay = -20) %>%
layout(
title = "Proportional Age and Nativity of AAPI in Boston",
yaxis = list(title = "Count"),
xaxis = list(title = "Age Groups"),
legend = list(title = list(text = "Nativity"))
)
dat_graph
# using plotly
dat_graph <- dat %>%
filter(age_groups != "Total") %>%
select(-Total) %>%
mutate(`Native born` =  `Native born`/ sum(`Native born`)) %>%
mutate(`Foreign born` =  `Foreign born`/ sum(`Foreign born`)) %>%
mutate(age_groups = ordered(age_groups, levels = unique(dat$age_groups))) %>%
cbind(boston_agegroups$values) %>%
plot_ly(
type = "bar",
x = ~age_groups,
y = ~`Native born`,
name = "Native Born",
color = I(bpda_colors$color_rgb[4])
) %>%
add_trace(
y = ~`Foreign born`,
name = "Foreign Born",
color = I(bpda_colors$color_rgb[3])
) %>%
add_trace(
y = ~boston_agegroups$values,
type = "scatter",
mode = "markers",
marker = list(symbol = "line-ew", size = 25,
line = list(width = 2)),
color = I("Red"),
text = ~boston_agegroups$values, textposition = 'auto',
name = "All Boston"
) %>%
add_annotations(y = ~boston_agegroups$values,
text = ~substr(paste0(boston_agegroups$values*100, "%"), 1, 4),
xref = "x",
yref = "y",
showarrow = TRUE,
# arrowhead = 4,
# arrowsize = .5,
ax = 20,
ay = -20) %>%
layout(
title = "Proportional Age and Nativity of AAPI in Boston",
yaxis = list(title = "Count"),
xaxis = list(title = "Age Groups"),
legend = list(title = list(text = "Nativity"))
)
dat_graph
getwd()
library(tidyverse)
dat2010 <- read.csv("DECENNIALPL2010.P1-2022-05-05T161153.csv")
dat2020 <- read.csv("DECENNIALPL2020.P1-2022-05-05T161143.csv")
rm(list = ls())
library(tidyverse)
dat2010 <- read.csv("DECENNIALPL2010.P1-2022-05-05T161153.csv")
dat2020 <- read.csv("DECENNIALPL2020.P1-2022-05-05T161143.csv")
View(dat2010)
regexpr("ASian", dat2010$ï..Label..Grouping.)
View(dat2010)
?regexpr
grep("Asian", dat2010$ï..Label..Grouping., ignore.case = T)
grep("Asian | Pacific", dat2010$ï..Label..Grouping., ignore.case = T)
c(grep("Asian", dat2010$ï..Label..Grouping., ignore.case = T),
grep("Pacific", dat2010$ï..Label..Grouping., ignore.case = T)) %>%
duplicated()
c(grep("Asian", dat2010$ï..Label..Grouping., ignore.case = T),
grep("Pacific", dat2010$ï..Label..Grouping., ignore.case = T)) %>%
filter(unique())
c(grep("Asian", dat2010$ï..Label..Grouping., ignore.case = T),
grep("Pacific", dat2010$ï..Label..Grouping., ignore.case = T)) %>%
select(unique())
c(grep("Asian", dat2010$ï..Label..Grouping., ignore.case = T),
grep("Pacific", dat2010$ï..Label..Grouping., ignore.case = T)) %>%
unique()
list2010 <- c(grep("Asian", dat2010$ï..Label..Grouping., ignore.case = T),
grep("Pacific", dat2010$ï..Label..Grouping., ignore.case = T))
list2010 <- unique(list2010)
list2020 <- c(grep("Asian", dat2020$ï..Label..Grouping., ignore.case = T),
grep("Pacific", dat2020$ï..Label..Grouping., ignore.case = T))
list2020 <- unique(list2010)
list2010 == list2020
dat2010$ï..Label..Grouping. == dat2020$ï..Label..Grouping.
View(dat2010)
View(dat2020)
cbind(dat2010$ï..Label..Grouping.[list2010,], dat2010[list2010,]$Boston.city..Massachusetts, dat2020$Boston.city..Massachusetts[list202,])
dat2010$ï..Label..Grouping.[list2010,]
cbind(dat2010$ï..Label..Grouping.[list2010], dat2010[list2010,]$Boston.city..Massachusetts, dat2020$Boston.city..Massachusetts[list202,])
cbind(dat2010$ï..Label..Grouping.[list2010], dat2010[list2010,]$Boston.city..Massachusetts, dat2020$Boston.city..Massachusetts[list2020,])
dat2010[list2010,]
dat2010[list2010,]$Boston.city..Massachusetts
dat2020$Boston.city..Massachusetts[list2020,]
dat2020$Boston.city..Massachusetts
cbind(dat2010$ï..Label..Grouping.[list2010], dat2010[list2010,]$Boston.city..Massachusetts, dat2020$Boston.city..Massachusetts[list2020])
dat <- cbind(dat2010$ï..Label..Grouping.[list2010], dat2010[list2010,]$Boston.city..Massachusetts, dat2020$Boston.city..Massachusetts[list2020])
apply(dat, 2, sum)
apply(dat[2:3], 2, sum)
apply(dat[,2:3], 2, sum)
apply(dat[,2:3], 1, sum)
colSums(dat[2:3])
colSums(dat[,2:3])
View(dat)
colnames(dat) <- c("labels", "2010", "2020")
dat <- dat %>%
mutate(`2010` = as.numeric(`2010`)) %>%
mutate(`2020` = as.numeric(`2020`))
colSums(dat[,2:3])
sum(dat[`2010`])
dat[`2010`]
sum(dat$`2010`)
dat <- dat %>%
mutate(`2010` = as.numeric(`2010`)) %>%
mutate(`2020` = as.numeric(`2020`))
dat <- dat %>%
as.data.frame() %>%
mutate(`2010` = as.numeric(`2010`)) %>%
mutate(`2020` = as.numeric(`2020`))
dat <- cbind(dat2010$ï..Label..Grouping.[list2010], dat2010[list2010,]$Boston.city..Massachusetts, dat2020$Boston.city..Massachusetts[list2020])
colnames(dat) <- c("labels", "2010", "2020")
write.csv(dat, "asian_2010_2020.csv")
location_type <- "County"
dat <- read.csv(paste0("data/Affinity - ", paste0(location_type), " - Daily.csv"))
if(location_type == "County") {
dat <- dat %>%
filter(countyfips == 25025)
# this is the county fips for Suffolk kCounty
} else if (location_type == "State") {
dat <- dat %>%
filter(statefips == 25)
# this is the state fips for MA
}
library(tidyverse)
library(dplyr)
library(lubridate)
# removing extraneous variables and setting proper wd
rm(list = ls())
setwd("~/GitHub/Affinity")
today <- format(Sys.Date(), "%Y.%m.%d")
location_type <- "County"
dat <- read.csv(paste0("data/Affinity - ", paste0(location_type), " - Daily.csv"))
if(location_type == "County") {
dat <- dat %>%
filter(countyfips == 25025)
# this is the county fips for Suffolk kCounty
} else if (location_type == "State") {
dat <- dat %>%
filter(statefips == 25)
# this is the state fips for MA
}
dat  <- dat %>%
mutate(Date = paste0(month, "/", day, "/", year))
mutate(as.POSIXct(as.numeric(as.character(dat$)),format="1970-01-01")
as.POSIXct(as.numeric(as.character(dat$)),format="1970-01-01")
as.POSIXct(as.numeric(as.character(dat$Date)),format="1970-01-01")
as.character(dat$Date)
as.numeric(as.character(dat$Date)
)
as.POSIXct(as.character(dat$Date),format="1970-01-01")
?as.POSIXct
as.Date(dat$Date)
as.Date.character(dat$Date)
mdy(dat$Date)
isoweek(mdy(dat$Date))
# removing extraneous variables and setting proper wd
rm(list = ls())
setwd("~/GitHub/Affinity")
today <- format(Sys.Date(), "%Y.%m.%d")
read_affinity_tables <- function(location_type) {
dat <- read.csv(paste0("data/Affinity - ", paste0(location_type), " - Daily.csv"))
if(location_type == "County") {
dat <- dat %>%
filter(countyfips == 25025)
# this is the county fips for Suffolk kCounty
} else if (location_type == "State") {
dat <- dat %>%
filter(statefips == 25)
# this is the state fips for MA
}
# clenaing out unwanted data
dat  <- dat %>%
mutate(Date = mdy(month, "/", day, "/", year)) %>%
select(Date, spend_all)
isoweek(mdy(dat$Date))
# looping through for week values
if(location_type == "County") {
dat <- date %>%
muatte(week = isoweek(Date))
}
return(dat)
}
df <- left_join(read_affinity_tables("County"),
left_join(read_affinity_tables("State"), read_affinity_tables("National"), by = "Date"), by = "Date") %>%
select(week, Date, spend_all, spend_all.x, spend_all.y)
read_affinity_tables <- function(location_type) {
dat <- read.csv(paste0("data/Affinity - ", paste0(location_type), " - Daily.csv"))
if(location_type == "County") {
dat <- dat %>%
filter(countyfips == 25025)
# this is the county fips for Suffolk kCounty
} else if (location_type == "State") {
dat <- dat %>%
filter(statefips == 25)
# this is the state fips for MA
}
# clenaing out unwanted data
dat  <- dat %>%
mutate(Date = paste0(month, "/", day, "/", year)) %>%
muatte(Date = mdy(Date))
select(Date, spend_all)
isoweek(mdy(dat$Date))
# looping through for week values
if(location_type == "County") {
dat <- date %>%
muatte(week = isoweek(Date))
}
return(dat)
}
df <- left_join(read_affinity_tables("County"),
left_join(read_affinity_tables("State"), read_affinity_tables("National"), by = "Date"), by = "Date") %>%
select(week, Date, spend_all, spend_all.x, spend_all.y)
read_affinity_tables <- function(location_type) {
dat <- read.csv(paste0("data/Affinity - ", paste0(location_type), " - Daily.csv"))
if(location_type == "County") {
dat <- dat %>%
filter(countyfips == 25025)
# this is the county fips for Suffolk kCounty
} else if (location_type == "State") {
dat <- dat %>%
filter(statefips == 25)
# this is the state fips for MA
}
# clenaing out unwanted data
dat  <- dat %>%
mutate(Date = paste0(month, "/", day, "/", year)) %>%
mutate(Date = mdy(Date))
select(Date, spend_all)
isoweek(mdy(dat$Date))
# looping through for week values
if(location_type == "County") {
dat <- date %>%
muatte(week = isoweek(Date))
}
return(dat)
}
df <- left_join(read_affinity_tables("County"),
left_join(read_affinity_tables("State"), read_affinity_tables("National"), by = "Date"), by = "Date") %>%
select(week, Date, spend_all, spend_all.x, spend_all.y)
read_affinity_tables <- function(location_type) {
dat <- read.csv(paste0("data/Affinity - ", paste0(location_type), " - Daily.csv"))
if(location_type == "County") {
dat <- dat %>%
filter(countyfips == 25025)
# this is the county fips for Suffolk kCounty
} else if (location_type == "State") {
dat <- dat %>%
filter(statefips == 25)
# this is the state fips for MA
}
# clenaing out unwanted data
dat  <- dat %>%
mutate(Date = paste0(month, "/", day, "/", year)) %>%
mutate(Date = mdy(Date))
select(Date, spend_all)
isoweek(mdy(dat$Date))
# looping through for week values
if(location_type == "County") {
dat <- date %>%
mutate(week = isoweek(Date))
}
return(dat)
}
df <- left_join(read_affinity_tables("County"),
left_join(read_affinity_tables("State"), read_affinity_tables("National"), by = "Date"), by = "Date") %>%
select(week, Date, spend_all, spend_all.x, spend_all.y)
read_affinity_tables <- function(location_type) {
dat <- read.csv(paste0("data/Affinity - ", paste0(location_type), " - Daily.csv"))
if(location_type == "County") {
dat <- dat %>%
filter(countyfips == 25025)
# this is the county fips for Suffolk kCounty
} else if (location_type == "State") {
dat <- dat %>%
filter(statefips == 25)
# this is the state fips for MA
}
# clenaing out unwanted data
dat  <- dat %>%
mutate(Date = paste0(month, "/", day, "/", year)) %>%
mutate(Date = mdy(Date)) %>%
select(Date, spend_all)
isoweek(mdy(dat$Date))
# looping through for week values
if(location_type == "County") {
dat <- date %>%
mutate(week = isoweek(Date))
}
return(dat)
}
df <- left_join(read_affinity_tables("County"),
left_join(read_affinity_tables("State"), read_affinity_tables("National"), by = "Date"), by = "Date") %>%
select(week, Date, spend_all, spend_all.x, spend_all.y)
location_type <- "County"
dat <- read.csv(paste0("data/Affinity - ", paste0(location_type), " - Daily.csv"))
if(location_type == "County") {
dat <- dat %>%
filter(countyfips == 25025)
# this is the county fips for Suffolk kCounty
} else if (location_type == "State") {
dat <- dat %>%
filter(statefips == 25)
# this is the state fips for MA
}
dat %>%
mutate(Date = paste0(month, "/", day, "/", year))
dat %>%
mutate(Date = paste0(month, "/", day, "/", year)) %>%
mutate(Date = mdy(Date))
dat %>%
mutate(Date = paste0(month, "/", day, "/", year)) %>%
mutate(Date = mdy(Date)) %>%
select(Date, spend_all)
dat %>%
mutate(week = isoweek(Date))
date %>%
mutate(week = isoweek(mdy(Date)))
dat %>%
mutate(week = isoweek(mdy(Date)))
# clenaing out unwanted data
dat  <- dat %>%
mutate(Date = paste0(month, "/", day, "/", year)) %>%
select(Date, spend_all)
dat %>%
mutate(week = isoweek(mdy(Date)))
# clenaing out unwanted data
dat  <- dat %>%
mutate(Date = paste0(month, "/", day, "/", year)) %>%
mutate(Date = mdy(Date)) %>%
select(Date, spend_all)
dat <- read.csv(paste0("data/Affinity - ", paste0(location_type), " - Daily.csv"))
dat %>%
mutate(Date = paste0(month, "/", day, "/", year)) %>%
mutate(Date = mdy(Date)) %>%
select(Date, spend_all)
read_affinity_tables <- function(location_type) {
dat <- read.csv(paste0("data/Affinity - ", paste0(location_type), " - Daily.csv"))
if(location_type == "County") {
dat <- dat %>%
filter(countyfips == 25025)
# this is the county fips for Suffolk kCounty
} else if (location_type == "State") {
dat <- dat %>%
filter(statefips == 25)
# this is the state fips for MA
}
# clenaing out unwanted data
dat  <- dat %>%
mutate(Date = paste0(month, "/", day, "/", year)) %>%
select(Date, spend_all)
# looping through for week values
if(location_type == "County") {
dat <- dat %>%
mutate(week = isoweek(mdy(Date)))
}
return(dat)
}
# removing extraneous variables and setting proper wd
rm(list = ls())
df <- left_join(read_affinity_tables("County"),
left_join(read_affinity_tables("State"), read_affinity_tables("National"), by = "Date"), by = "Date") %>%
select(week, Date, spend_all, spend_all.x, spend_all.y)
read_affinity_tables <- function(location_type) {
dat <- read.csv(paste0("data/Affinity - ", paste0(location_type), " - Daily.csv"))
if(location_type == "County") {
dat <- dat %>%
filter(countyfips == 25025)
# this is the county fips for Suffolk kCounty
} else if (location_type == "State") {
dat <- dat %>%
filter(statefips == 25)
# this is the state fips for MA
}
# clenaing out unwanted data
dat  <- dat %>%
mutate(Date = paste0(month, "/", day, "/", year)) %>%
select(Date, spend_all)
# looping through for week values
if(location_type == "County") {
dat <- dat %>%
mutate(week = isoweek(mdy(Date)))
}
return(dat)
}
df <- left_join(read_affinity_tables("County"),
left_join(read_affinity_tables("State"), read_affinity_tables("National"), by = "Date"), by = "Date") %>%
select(week, Date, spend_all, spend_all.x, spend_all.y)
View(df)
colnames(df) <- c("Week", "Day", "Suffolk", "MA", "US")
today <- format(Sys.Date(), "%Y.%m.%d")
# writing and opening the fiel in excel
write.csv(df, paste0("output/consumer_spending", today, ".csv"))
# writing and opening the fiel in excel
write.csv(df, paste0("output/consumer_spending_", today, ".csv"))
install.packages("readxl")
View(df)
read_affinity_tables("County")
library(tidyverse)
library(dplyr)
library(lubridate)
# removing extraneous variables and setting proper wd
rm(list = ls())
setwd("~/GitHub/Affinity")
today <- "2022.06.10"
read_affinity_tables("County")
read_affinity_tables <- function(location_type) {
dat <- read.csv(paste0("data/Affinity - ", paste0(location_type), " - Daily.csv"))
# filtering for correct state an docunty
if(location_type == "County") {
dat <- dat %>%
filter(countyfips == 25025)
# this is the county fips for Suffolk kCounty
} else if (location_type == "State") {
dat <- dat %>%
filter(statefips == 25)
# this is the state fips for MA
}
# clenaing out unwanted data
dat  <- dat %>%
mutate(Date = paste0(month, "/", day, "/", year)) %>%
select(Date, spend_all)
# using lubridate to count week value number
if(location_type == "County") {
dat <- dat %>%
mutate(week = isoweek(mdy(Date)))
}
return(dat)
}
read_affinity_tables("County")
check <- read_affinity_tables("County")
max(check$Date)
View(check)
check <- left_join(read_affinity_tables("State"), read_affinity_tables("National"), by = "Date")
# creating one DF
df <- left_join(read_affinity_tables("County"),
left_join(read_affinity_tables("State"), read_affinity_tables("National"), by = "Date"), by = "Date") %>%
select(week, Date, spend_all, spend_all.x, spend_all.y)
View(df)
colnames(df) <- c("Week", "Day", "Suffolk", "MA", "US")
# writing and opening the fiel in excel
write.csv(df, paste0("output/consumer_spending_", today, ".csv"))
library(tidyverse)
library(dplyr)
library(lubridate)
# removing extraneous variables and setting proper wd
rm(list = ls())
setwd("~/GitHub/Affinity")
today <- format(Sys.Date(), "%Y.%m.%d")
today <- "2022.06.10"
read_affinity_tables <- function(location_type) {
dat <- read.csv(paste0("data/Affinity - ", paste0(location_type), " - Daily.csv"))
# filtering for correct state an docunty
if(location_type == "County") {
dat <- dat %>%
filter(countyfips == 25025)
# this is the county fips for Suffolk kCounty
} else if (location_type == "State") {
dat <- dat %>%
filter(statefips == 25)
# this is the state fips for MA
}
# clenaing out unwanted data
dat  <- dat %>%
mutate(Date = paste0(month, "/", day, "/", year)) %>%
select(Date, spend_all)
# using lubridate to count week value number
if(location_type == "County") {
dat <- dat %>%
mutate(week = isoweek(mdy(Date)))
}
return(dat)
}
# creating one DF
df <- left_join(read_affinity_tables("County"),
left_join(read_affinity_tables("State"), read_affinity_tables("National"), by = "Date"), by = "Date") %>%
select(week, Date, spend_all, spend_all.x, spend_all.y)
colnames(df) <- c("Week", "Day", "Suffolk", "MA", "US")
# writing and opening the fiel in excel
write.csv(df, paste0("output/consumer_spending_", today, ".csv"))
check <- left_join(read_affinity_tables("State"), read_affinity_tables("National"), by = "Date")
# writing and opening the fiel in excel
write.csv(df, paste0("output/consumer_spending_", today, ".csv"))
